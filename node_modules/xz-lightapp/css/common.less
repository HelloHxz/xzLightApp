@headerbordercolor:rgb(171,171,173);
         @backgroundcolor:rgb(235,235,241);
         @themecolor:rgb(10,96,254);
         @bordercolor:rgb(194,192,198);
         .displayflex () {
            position: relative; 
            display: -webkit-box;
            display: -webkit-flex;
            display: -moz-box;
            display: -moz-flex;
            display: -ms-flexbox;
            display: flex;
            -webkit-overflow-scrolling: touch;
          }
          .flex-wrap (@params) when (@params=wrap) {
            flex-wrap: wrap;
              -webkit-box-lines: multiple;
              box-lines: multiple;
              -webkit-flex-wrap: wrap;
          }

          .flex-wrap (@params) when (@params=wrap-reverse) {
            flex-wrap: wrap-reverse;
              -webkit-flex-wrap: wrap-reverse;
          }

          .flex-wrap (@params) when (@params=nowrap) {
            flex-wrap: nowrap;
              -webkit-box-lines: single;
              box-lines: single;
              -webkit-flex-wrap: nowrap;
          }
          .flex-direction (@dir) when (@dir=row) {
            -webkit-box-direction: normal;
            -webkit-box-orient: horizontal;
            -moz-flex-direction: row;
            -webkit-flex-direction: row;
            flex-direction: row;
          }
          .flex-direction (@dir) when (@dir=column) {
            -webkit-box-direction: normal;
            -webkit-box-orient: vertical;
            -moz-flex-direction: column;
            -webkit-flex-direction: column;
            flex-direction: column;
          }
          .justify-content (@params) when (@params=space-around) {
            justify-content: space-around;
              -webkit-justify-content: space-around;
          }
          .justify-content (@params) when (@params=space-between) {
            justify-content: space-between;
              -webkit-justify-content: space-between;
          }
          .justify-content (@params) when (@params=center) {
            -webkit-box-pack: center;
              box-pack: center;
              -moz-justify-content: center;
              -webkit-justify-content: center;
              justify-content: center;
          }
          .justify-content (@params) when (@params=flex-start) {
            -webkit-box-pack: start;
              box-pack: start;
              -moz-justify-content: flex-start;
              -webkit-justify-content: flex-start;
              justify-content: flex-start;
          }
          .justify-content (@params) when (@params=flex-end) {
            -webkit-box-pack: end;
              box-pack: end;
              -moz-justify-content: flex-end;
              -webkit-justify-content: flex-end;
              justify-content: flex-end;
          }
          .align-items(@params) when(@params=stretch){
            align-items: stretch;
              -webkit-align-items: stretch;
          }
          .align-items(@params) when(@params=flex-start){
            -webkit-box-align: start;
              box-align: start;
              -moz-align-items: flex-start;
              -webkit-align-items: flex-start;
              align-items: flex-start;
          }
          .align-items(@params) when(@params=flex-end){
            -webkit-box-align: end;
              box-align: end;
              -moz-align-items: flex-end;
              -webkit-align-items: flex-end;
              align-items: flex-end;
          }
          .align-items(@params) when(@params=center){
            -webkit-box-align: center;
              box-align: center;
              -moz-align-items: center;
              -webkit-align-items: center;
              align-items: center;
          }
          .flex(@w){
            flex: @w;
              -webkit-flex: @w;
              -webkit-box-flex: @w;
              -moz-box-flex: @w;
              box-flex: @w;
              -ms-flex: @w;
          }
         .px2rem(@name, @px){ @{name}: @px / 75 * 1rem;}
         .px2remtransfrom(@x,@y){
          transform: translate3d( @x / 75 * 1rem,  @y / 75 * 1rem, 0);
          -webkit-transform: translate3d( @x / 75 * 1rem,  @y / 75 * 1rem, 0);
        }